@model EurocomV2.ViewModels.PatientsViewModel
@using EurocomV2_Data;
@{
    ViewData["Title"] = "Dashboard";
    DoctorReaderV2 doctorReader = new DoctorReaderV2();
    string InfoPatients = "";
    List<string> names = new List<string>(); // List with the names of the patients
    List<string> ids = new List<string>();

    doctorReader.Read(Model.DoctorId);
    var data = doctorReader.GetPatientData();
    foreach (var patient in data)
    {
        names.Add(patient.FirstName);
        ids.Add(patient.Id);
    }
    for (int i = 0; i < doctorReader.patients.Count; i++)
    {
        InfoPatients += doctorReader.patients[i].UserName + "\n" + doctorReader.patients[i].Email + "\n" + doctorReader.patients[i].Number + "\n------------------------------------------\n";
    }
}

<body style="background: #9fdefa">
    <div class="Head">Welcome, Dr @User.Identity.Name</div>
    <div class="container">
        <div class="row">
            <div><br /><br /></div>
            <div class="col-xl-6 col-12 w-100" style="height:25rem;">
                <div class="w-100 Privacytext" style="height:3rem">Meldingen</div>
                <div class="col-12 Privacytext w-100" style="height:22rem">
                    <div>
                        @* @foreach (melding in meldingen){
                             <div class="col-12">
                             <a href="Doctor/meldingInhoud">
                             <div>melding.naam</div>
                             </a>
                             </div>
                            }*@
                    </div>
                </div>
            </div>
            <div class="col-12 d-xl-none" style="height:60px;"></div>
            <div class="col-xl-5 col-12" style="text-align:center; height:25rem;">
                <div class="w-100 Privacytext" style="height:3rem">Patienten</div>
                <input type="text" class="w-100 search-input" style="height:2rem; border-style:solid; border-color:white;" placeholder="Zoek hier..." />
                <div class="list-group w-100 Privacytext suggestions" style="overflow-y:scroll; height:17.5rem;">
                    @for (int i = 0; i < names.Count; i++)
                    {
                        <div class="searchresults"><a style="color:white;" asp-controller="doctor" asp-action="overview_start" asp-route-id="@ids[i]"><div>@names[i]</div></a></div>
                    }
                </div>

                <button class="btn btn-primary w-100" style="height:2.5rem">Create patient</button>
            </div>
            <div class="col-12" style="height:60px"></div>
        </div>
    </div>
</body>

<script type="text/javascript" language="javascript">
    const Patienten = [
    ];
    var count = @names.Count;
    var arr = JSON.parse('@Html.Raw(Json.Serialize(names))');
    var arrid = JSON.parse('@Html.Raw(Json.Serialize(ids))');

    for (var i = 0; i < count; i++) {
        Patienten.push({ name: arr[i], value: arrid[i] });
    }
    const searchInput = document.querySelector('.search-input');
    const suggestionsPanel = document.querySelector('.suggestions');


    searchInput.addEventListener('keyup', function () {
        const input = searchInput.value;
        suggestionsPanel.innerHTML = '';
        const suggestions = Patienten.filter(function (patient) {
            return patient.name.toLowerCase().startsWith(input);
        });
        suggestions.forEach(function (suggested) {
            const Uberdiv = document.createElement('div');
            const a = document.createElement('a');
            const div = document.createElement('div');
            div.innerHTML = suggested.name;
            a.href = "overview_start/" + suggested.value;
            a.setAttribute("style", "color:white;");
            a.appendChild(div);
            Uberdiv.setAttribute("class", "searchresults")
            Uberdiv.appendChild(a);
            suggestionsPanel.appendChild(Uberdiv);
        });
    })
</script>